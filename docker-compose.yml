services:
  web:
    build: ./backend
    command: ./wait-for-db.sh python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - rabbitmq
    env_file:
      - ./backend/.env
    networks:
      - AppNetwork
    container_name: backend


  db:
    image: timescale/timescaledb:latest-pg14
    environment:
      POSTGRES_USER: airuser
      POSTGRES_PASSWORD: airpass
      POSTGRES_DB: airquality
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - AppNetwork
    container_name: db
      
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - AppNetwork
    container_name: rabbitmq
  
  worker:
    build: ./backend
    command: python worker.py
    depends_on:
      - db
      - rabbitmq
    volumes:
      - ./backend:/code
    container_name: worker
    networks:
      - AppNetwork
  nginx:
    build: ./frontend  # ya da ayrÄ± nginx dizini yapabilirsin
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - AppNetwork
    container_name: nginx
  

volumes:
  postgres_data:

networks:
  AppNetwork:
